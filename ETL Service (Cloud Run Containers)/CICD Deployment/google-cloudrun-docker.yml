name: Docker Build and Push

on:
  push:
    branches:
      - main
    paths:
      - 'Eagle/Eagle_Pipelines/**'

env:
  PROJECT_ID: sandbox
  GAR_LOCATION: us-central1
  REPOSITORY:  Eagle-repo
  VPC_CONNECTOR_NAME: Eagle-access
  # GCP_CONNECTION_JSON: ${{ secrets.GCP_CONNECTION_JSON }}
  IMAGE: main

jobs:
  identify-changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 2


    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v39

    - name: Extract modified folders and set matrix
      id: set-matrix
      run: |
        folders=()
        for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
          if [[ "$file" == Eagle/Eagle_Pipelines/* ]]; then
            folder=$(echo "$file" | awk -F'/' '{print $3}')
            folders+=("$folder")
          fi
        done
        unique_folders=($(echo "${folders[@]}" | tr ' ' '\n' | sort -u | tr '\n' ' '))
        matrix_value=$(echo "${unique_folders[@]}" | jq -R -s -c 'split(" ")')
        echo "::set-output name=matrix::$matrix_value"


  build-and-push:
    needs: identify-changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        folder: ${{fromJson(needs.identify-changes.outputs.matrix)}}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Google Container Registry
      uses: docker/login-action@v1 
      with:
        registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev
        username: _json_key
        password: ${{ secrets.GCPSECRETSCONNECTION }}

    - name: Authenticate with GCP
      run: |
        echo '${{ secrets.GCPSECRETSCONNECTION }}' | gcloud auth activate-service-account --key-file=-
        gcloud config set project ${{ env.PROJECT_ID }}



    - name: Build, tag, and push Docker image
      run: |
        cd Eagle/Eagle_Pipelines/${{ matrix.folder }}
        
        folder_name="${{ matrix.folder }}"
        lower_case_name=$(echo "$folder_name" | tr '[:upper:]' '[:lower:]')
        image_name=$(echo "$lower_case_name" | tr '_' '-')
        
        echo "Image Name: $image_name"
        
        docker buildx create --use
        docker buildx build --no-cache --platform linux/amd64 -t "$image_name" --load .
        docker tag $image_name us-central1-docker.pkg.dev/sandbox/Eagle-repo/$image_name
        docker push us-central1-docker.pkg.dev/sandbox/Eagle-repo/$image_name



    - name: Deploy to Google Cloud Run
      run: |
        folder_name="${{ matrix.folder }}"
        lower_case_name=$(echo "$folder_name" | tr '[:upper:]' '[:lower:]')
        image_name=$(echo "$lower_case_name" | tr '_' '-')
        image_path=${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/$image_name
        gcloud beta run deploy $image_name \
            --image $image_path \
            --region ${{ env.GAR_LOCATION }} \
            --platform managed \
            --project ${{ env.PROJECT_ID }} \
            --allow-unauthenticated \
            --ingress=all \
            --network=Eagle-access \
            --subnet=Eagle-access \
            --vpc-egress=private-ranges-only \
            --service-account=${{ secrets.SERVICE_ACCOUNT_NAME }} \
            --cpu=1000m \
            --memory=512Mi \
            --port=8080 \
            --max-instances=100 \
            --timeout=300 \
            --no-use-http2 
